version: "3"

services:
  redis:
    image: redis:7.0
    container_name: drones_redis
    networks:
      drones_subnet:
        aliases:
          - redis
  celery_worker:
    container_name: drones_celery_worker
    build: .
    command: ./celery_worker.sh
    env_file:
      - .env
    networks:
      drones_subnet:
        aliases:
          - worker
    depends_on:
      - api
      - redis
  celery_beat:
    container_name: drones_celery_beat
    build: .
    command: ./celery_beat.sh
    env_file:
      - .env
    networks:
      drones_subnet:
        aliases:
          - beat
    depends_on:
      - celery_worker
  nginx:
    image: nginx:1.23.2
    container_name: drones_nginx
    ports:
      - "8000:80"
    volumes:
      - static_files:/code/drones_api/static
      - media_files:/code/drones_api/media
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      drones_subnet:
        aliases:
          - nginx
    restart: "on-failure"
  db:
    image: postgres:13.4
    restart: always
    container_name: drones_db
    networks:
      drones_subnet:
        aliases:
          - postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
  api:
    container_name: drones_api
    build: .
    volumes:
      - static_files:/code/drones_api/static/
      - media_files:/code/drones_api/media/
      - ./data/logs:/code/logs/
    env_file:
      - .env
    networks:
      drones_subnet:
        aliases:
          - drones_api
    depends_on:
      - db
    restart: always

volumes:
  static_files:
  media_files:

networks:
  drones_subnet: